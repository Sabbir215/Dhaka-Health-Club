---
import Layout from '../layouts/Layout.astro';

const galleryImages = [
  {
    src: '/gallery/community-event-1.jpg',
    title: 'Community Gathering',
    description: 'Members coming together to share ideas and build connections',
    category: 'Events'
  },
  {
    src: '/gallery/community-event-2.jpg',
    title: 'Team Activities',
    description: 'Collaborative exercises strengthening our community bonds',
    category: 'Activities'
  },
  {
    src: '/gallery/community-event-3.jpg',
    title: 'Wellness Workshop',
    description: 'Mindfulness and meditation sessions for mental well-being',
    category: 'Wellness'
  },
  {
    src: '/gallery/community-event-4.jpg',
    title: 'Making Impact',
    description: 'Community service initiatives creating positive change',
    category: 'Impact'
  }
];
---

<Layout title="Gallery - Dhaka Health Club">
  <!-- Hero Section -->
  <section class="relative py-20 bg-gradient-to-br from-green-50 via-emerald-50 to-teal-50 overflow-hidden">
    <!-- Decorative blobs -->
    <div class="absolute top-0 left-0 w-96 h-96 bg-green-300 rounded-full mix-blend-multiply filter blur-3xl opacity-20 animate-blob"></div>
    <div class="absolute bottom-0 right-0 w-96 h-96 bg-emerald-300 rounded-full mix-blend-multiply filter blur-3xl opacity-20 animate-blob animation-delay-2000"></div>
    
    <div class="container mx-auto text-center relative z-10 px-4">
      <div class="inline-block mb-4">
        <span class="px-4 py-2 bg-gradient-to-r from-green-500 to-emerald-500 text-white text-sm font-semibold rounded-full shadow-lg">
          Our Story in Pictures
        </span>
      </div>
      <h1 class="text-6xl md:text-7xl font-bold mb-6 text-gradient">
        Community Gallery
      </h1>
      <p class="text-xl text-slate-600 mb-8 max-w-3xl mx-auto leading-relaxed">
        Explore the vibrant moments and meaningful connections that make Dhaka Health Club a special place. 
        Every image tells a story of growth, health, and community.
      </p>
      <div class="flex gap-4 justify-center flex-wrap">
        <button class="filter-btn active px-6 py-3 bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-xl font-semibold shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300" data-filter="all">
          All Photos
        </button>
        <button class="filter-btn px-6 py-3 bg-white text-slate-700 rounded-xl font-semibold shadow-md hover:shadow-lg transform hover:scale-105 transition-all duration-300" data-filter="Events">
          Events
        </button>
        <button class="filter-btn px-6 py-3 bg-white text-slate-700 rounded-xl font-semibold shadow-md hover:shadow-lg transform hover:scale-105 transition-all duration-300" data-filter="Activities">
          Activities
        </button>
        <button class="filter-btn px-6 py-3 bg-white text-slate-700 rounded-xl font-semibold shadow-md hover:shadow-lg transform hover:scale-105 transition-all duration-300" data-filter="Wellness">
          Wellness
        </button>
        <button class="filter-btn px-6 py-3 bg-white text-slate-700 rounded-xl font-semibold shadow-md hover:shadow-lg transform hover:scale-105 transition-all duration-300" data-filter="Impact">
          Impact
        </button>
      </div>
    </div>
  </section>

  <!-- Gallery Grid -->
  <section class="py-20 bg-white">
    <div class="container mx-auto px-4">
      <div id="gallery-grid" class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {galleryImages.map((image) => (
          <div class="gallery-item group" data-category={image.category}>
            <div class="relative overflow-hidden rounded-2xl shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:scale-105 cursor-pointer bg-white">
              <div class="aspect-[4/3] overflow-hidden">
                <img 
                  src={image.src}
                  alt={image.title}
                  class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-700"
                />
              </div>
              <div class="absolute inset-0 bg-gradient-to-t from-green-900/90 via-green-900/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end">
                <div class="p-6 text-white transform translate-y-8 group-hover:translate-y-0 transition-transform duration-300">
                  <span class="inline-block px-3 py-1 bg-green-500/80 backdrop-blur-sm text-xs font-semibold rounded-full mb-3">
                    {image.category}
                  </span>
                  <h3 class="text-2xl font-bold mb-2">{image.title}</h3>
                  <p class="text-green-100 text-sm leading-relaxed">{image.description}</p>
                </div>
              </div>
              <!-- View button -->
              <button 
                class="absolute top-4 right-4 w-12 h-12 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 hover:bg-green-500 hover:text-white shadow-lg lightbox-trigger"
                data-src={image.src}
                data-title={image.title}
                data-description={image.description}
              >
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7"></path>
                </svg>
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Lightbox Modal -->
  <div id="lightbox" class="fixed inset-0 bg-black/95 backdrop-blur-lg z-50 hidden items-center justify-center p-4">
    <button id="close-lightbox" class="absolute top-6 right-6 w-12 h-12 bg-white/10 hover:bg-white/20 rounded-full flex items-center justify-center text-white transition-colors duration-300">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
    <div class="max-w-6xl w-full">
      <img id="lightbox-image" src="" alt="" class="w-full h-auto rounded-2xl shadow-2xl mb-6" />
      <div class="text-center text-white">
        <h3 id="lightbox-title" class="text-3xl font-bold mb-2"></h3>
        <p id="lightbox-description" class="text-lg text-green-200"></p>
      </div>
    </div>
  </div>

  <!-- Call to Action -->
  <section class="py-20 bg-gradient-to-br from-green-50 to-emerald-50">
    <div class="container mx-auto text-center px-4">
      <div class="max-w-3xl mx-auto">
        <h2 class="text-4xl md:text-5xl font-bold mb-6 text-gradient">
          Be Part of Our Story
        </h2>
        <p class="text-xl text-slate-600 mb-8 leading-relaxed">
          Join us and create your own memorable moments. Every event is an opportunity to connect, grow, and make a difference.
        </p>
        <div class="flex gap-4 justify-center flex-wrap">
          <a href="/register" class="btn btn-primary text-lg">
            Join Our Community
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
            </svg>
          </a>
          <a href="/dashboard" class="btn btn-secondary text-lg">
            View Dashboard
          </a>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  @keyframes blob {
    0%, 100% { transform: translate(0, 0) scale(1); }
    25% { transform: translate(20px, -50px) scale(1.1); }
    50% { transform: translate(-20px, 20px) scale(0.9); }
    75% { transform: translate(50px, 50px) scale(1.05); }
  }

  .animate-blob {
    animation: blob 7s infinite;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .gallery-item {
    transition: all 0.3s ease;
  }

  .gallery-item.hidden {
    display: none;
  }

  .filter-btn.active {
    background: linear-gradient(135deg, #2E7D32 0%, #4CAF50 100%);
    color: white;
  }
</style>

<script>
  // Filter functionality
  const filterButtons = document.querySelectorAll('.filter-btn');
  const galleryItems = document.querySelectorAll('.gallery-item');

  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      const filter = button.getAttribute('data-filter');
      
      // Update active button
      filterButtons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');

      // Filter items
      galleryItems.forEach(item => {
        const category = item.getAttribute('data-category');
        if (filter === 'all' || category === filter) {
          item.classList.remove('hidden');
        } else {
          item.classList.add('hidden');
        }
      });
    });
  });

  // Lightbox functionality
  const lightbox = document.getElementById('lightbox');
  const lightboxImage = document.getElementById('lightbox-image');
  const lightboxTitle = document.getElementById('lightbox-title');
  const lightboxDescription = document.getElementById('lightbox-description');
  const closeLightbox = document.getElementById('close-lightbox');
  const lightboxTriggers = document.querySelectorAll('.lightbox-trigger');

  lightboxTriggers.forEach(trigger => {
    trigger.addEventListener('click', (e) => {
      e.stopPropagation();
      const src = trigger.getAttribute('data-src');
      const title = trigger.getAttribute('data-title');
      const description = trigger.getAttribute('data-description');
      
      if (lightboxImage && lightboxTitle && lightboxDescription && lightbox) {
        lightboxImage.src = src || '';
        lightboxTitle.textContent = title || '';
        lightboxDescription.textContent = description || '';
        lightbox.classList.remove('hidden');
        lightbox.classList.add('flex');
      }
    });
  });

  if (closeLightbox && lightbox) {
    closeLightbox.addEventListener('click', () => {
      lightbox.classList.add('hidden');
      lightbox.classList.remove('flex');
    });

    lightbox.addEventListener('click', (e) => {
      if (e.target === lightbox) {
        lightbox.classList.add('hidden');
        lightbox.classList.remove('flex');
      }
    });
  }

  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && lightbox && !lightbox.classList.contains('hidden')) {
      lightbox.classList.add('hidden');
      lightbox.classList.remove('flex');
    }
  });
</script>
